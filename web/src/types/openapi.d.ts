/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/google": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/google/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/setup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/disable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/verify-login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/system/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Liveness/health probe */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            service?: string;
                            time?: string;
                            uptimeSeconds?: number;
                            pid?: number;
                            memoryMB?: {
                                [key: string]: number;
                            };
                            version?: string;
                            env?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/system/xrpl-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** XRPL connectivity and node telemetry */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            endpoint?: string;
                            connected?: boolean;
                            info?: {
                                [key: string]: unknown;
                            };
                            fees?: {
                                [key: string]: unknown;
                            };
                            validatedLedger?: {
                                [key: string]: unknown;
                            };
                            error?: string;
                            time?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tokens/issue": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Issue a token from issuer to holder
         * @description Issues an IOU payment from the issuer account to the holder. Accepts 3-char codes (USD/EUR) or longer ASCII codes which are normalized (by the adapter) to 160-bit hex for XRPL. Holder must have a TrustSet with sufficient limit.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    /** @example {
                     *       "currencyCode": "MARKS",
                     *       "amount": "100",
                     *       "destination": "rE5MDtonMcosLV6fpRJjib3MQiBZ8HGapw",
                     *       "metadata": {
                     *         "jurisdiction": "DE"
                     *       }
                     *     } */
                    "application/json": {
                        /** @description 3-char code (e.g., USD) or longer ASCII; long codes auto-convert to hex-160 by the adapter. */
                        currencyCode: string;
                        /** @description Token amount as a string to preserve precision. */
                        amount: string;
                        /** @description Holder address (r-addr on XRPL). */
                        destination: string;
                        /**
                         * @description Optional arbitrary metadata encoded in a transaction Memo.
                         * @default {}
                         */
                        metadata?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            txHash?: string;
                            explorer?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            error?: string;
                            hint?: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/balances/{account}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get issued token balances for an account */
        get: {
            parameters: {
                query?: {
                    /** @description Optional issuer r-address filter */
                    issuer?: string;
                    /** @description Optional currency filter (3-char like USD/EUR or 160-bit hex) */
                    currency?: string;
                };
                header?: never;
                path: {
                    /** @description Account r-address */
                    account: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            account?: string;
                            xrpBalance?: string;
                            trustLines?: {
                                currency?: string;
                                currencyHex?: string;
                                issuer?: string;
                                balance?: string;
                                limit?: string;
                                frozen?: boolean;
                                noRipple?: boolean;
                                qualityIn?: number;
                                qualityOut?: number;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registry/tokens": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List token records with filtering and pagination
         * @description Retrieves a paginated list of token records with optional filtering by symbol and ledger
         */
        get: {
            parameters: {
                query?: {
                    symbol?: string;
                    ledger?: "xrpl-testnet" | "xrpl-mainnet";
                    limit?: number;
                    cursor?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            items: {
                                id: string;
                                /** @enum {string} */
                                ledger: "xrpl-testnet" | "xrpl-mainnet";
                                symbol: string;
                                supply: string;
                                issuerAddress: string;
                                holderAddress?: string | null;
                                txHash: string;
                                compliance?: {
                                    [key: string]: unknown;
                                } | null;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            nextCursor?: string | null;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: {
                                [key: string]: unknown;
                            } | null;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create or update a token record
         * @description Creates a new token record or updates an existing one based on transaction hash. Idempotent operation.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @enum {string} */
                        ledger: "xrpl-testnet" | "xrpl-mainnet";
                        symbol: string;
                        supply: string;
                        issuerAddress: string;
                        holderAddress?: string;
                        txHash: string;
                        compliance?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            /** @enum {string} */
                            ledger: "xrpl-testnet" | "xrpl-mainnet";
                            symbol: string;
                            supply: string;
                            issuerAddress: string;
                            holderAddress?: string | null;
                            txHash: string;
                            compliance?: {
                                [key: string]: unknown;
                            } | null;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: {
                                [key: string]: unknown;
                            } | null;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: {
                                [key: string]: unknown;
                            } | null;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registry/tokens/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a specific token record by ID
         * @description Retrieves a token record by its unique identifier
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            /** @enum {string} */
                            ledger: "xrpl-testnet" | "xrpl-mainnet";
                            symbol: string;
                            supply: string;
                            issuerAddress: string;
                            holderAddress?: string | null;
                            txHash: string;
                            compliance?: {
                                [key: string]: unknown;
                            } | null;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: {
                                [key: string]: unknown;
                            } | null;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: {
                                [key: string]: unknown;
                            } | null;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registry/tokens/{id}/report": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Export a registry record as JSON (default) or CSV
         * @description Exports a token record in JSON or CSV format based on Accept header or format query parameter
         */
        get: {
            parameters: {
                query?: {
                    format?: "json" | "csv";
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description JSON body or CSV file */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            /** @enum {string} */
                            ledger: "xrpl-testnet" | "xrpl-mainnet";
                            symbol: string;
                            supply: string;
                            issuerAddress: string;
                            holderAddress?: string | null;
                            txHash: string;
                            compliance?: {
                                [key: string]: unknown;
                            } | null;
                            /** Format: date-time */
                            createdAt: string;
                        } | string;
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: {
                                [key: string]: unknown;
                            } | null;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: {
                                [key: string]: unknown;
                            } | null;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registry/tokens/report": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Bulk export all token records as JSON or CSV
         * @description Exports token records in JSON or CSV with optional filtering by symbol, ledger, and date range
         */
        get: {
            parameters: {
                query?: {
                    symbol?: string;
                    ledger?: "xrpl-testnet" | "xrpl-mainnet";
                    /** @description ISO date-time lower bound (inclusive) */
                    from?: string;
                    /** @description ISO date-time upper bound (inclusive) */
                    to?: string;
                    limit?: number;
                    format?: "json" | "csv";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description JSON array or CSV file */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            /** @enum {string} */
                            ledger: "xrpl-testnet" | "xrpl-mainnet";
                            symbol: string;
                            supply: string;
                            issuerAddress: string;
                            holderAddress?: string | null;
                            txHash: string;
                            compliance?: {
                                [key: string]: unknown;
                            } | null;
                            /** Format: date-time */
                            createdAt: string;
                        }[] | string;
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: {
                                [key: string]: unknown;
                            } | null;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance-records": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create compliance record
         * @description Store off-ledger compliance metadata (MiCA, ISIN, jurisdiction)
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @default cmp.v1 */
                        version?: string;
                        /** @description Asset identifier */
                        assetId: string;
                        holder: string;
                        /** @description ISIN code */
                        isin?: string;
                        /** @description Legal issuer name */
                        legalIssuer?: string;
                        /** @description Jurisdiction code */
                        jurisdiction?: string;
                        /** @description MiCA classification */
                        micaClass?: string;
                        /** @description KYC requirement level */
                        kycRequirement?: string;
                        /** @default false */
                        transferRestrictions?: boolean;
                        /** @description Token purpose */
                        purpose?: string;
                        docs?: {
                            type?: string;
                            hash?: string;
                        }[];
                        /** Format: date-time */
                        consentTs?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            recordId?: string;
                            sha256?: string;
                            status?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance-records/{recordId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get compliance record
         * @description Fetch compliance record (redacted for privacy)
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    recordId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            recordId?: string;
                            sha256?: string;
                            status?: string;
                            assetId?: string;
                            jurisdiction?: string;
                            micaClass?: string;
                            transferRestrictions?: boolean;
                            purpose?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance-records/{recordId}/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Verify compliance record
         * @description Update compliance record status (auditor/regulator only)
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    recordId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @enum {string} */
                        status: "verified" | "rejected";
                        /** @description Reason for rejection */
                        reason?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            recordId?: string;
                            status?: string;
                            verifiedAt?: string;
                            reason?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/v1/assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List assets
         * @description Get all assets with optional filtering
         */
        get: {
            parameters: {
                query?: {
                    ledger?: string;
                    status?: string;
                    limit?: number;
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            assets?: {
                                id?: string;
                                assetRef?: string;
                                ledger?: string;
                                network?: string;
                                issuer?: string;
                                code?: string;
                                decimals?: number;
                                complianceMode?: string;
                                status?: string;
                                createdAt?: string;
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create new asset
         * @description Register a new asset with ledger binding and policy configuration
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description Target ledger for the asset
                         * @enum {string}
                         */
                        ledger: "xrpl" | "hedera" | "ethereum";
                        /**
                         * @description Network environment
                         * @default testnet
                         * @enum {string}
                         */
                        network?: "mainnet" | "testnet" | "devnet";
                        /** @description Issuer address/identifier on the ledger */
                        issuer: string;
                        /** @description Currency code/symbol */
                        code: string;
                        /** @description Number of decimal places */
                        decimals: number;
                        /**
                         * @description Compliance enforcement mode
                         * @default RECORD_ONLY
                         * @enum {string}
                         */
                        complianceMode?: "OFF" | "RECORD_ONLY" | "GATED_BEFORE";
                        controls?: {
                            requireAuth?: boolean;
                            freeze?: boolean;
                            clawback?: boolean;
                            transferFeeBps?: number;
                        };
                        registry?: {
                            isin?: string;
                            lei?: string;
                            micaClass?: string;
                            jurisdiction?: string;
                        };
                        metadata?: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetRef?: string;
                            ledger?: string;
                            network?: string;
                            issuer?: string;
                            code?: string;
                            decimals?: number;
                            complianceMode?: string;
                            status?: string;
                            createdAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get asset details
         * @description Retrieve asset configuration and metadata
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetRef?: string;
                            ledger?: string;
                            network?: string;
                            issuer?: string;
                            code?: string;
                            decimals?: number;
                            complianceMode?: string;
                            controls?: Record<string, never>;
                            registry?: Record<string, never>;
                            metadata?: Record<string, never>;
                            status?: string;
                            createdAt?: string;
                            updatedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        /**
         * Update asset
         * @description Update asset configuration (draft assets only)
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @enum {string} */
                        status?: "draft" | "active" | "paused" | "retired";
                        /** @enum {string} */
                        complianceMode?: "OFF" | "RECORD_ONLY" | "GATED_BEFORE";
                        controls?: Record<string, never>;
                        registry?: Record<string, never>;
                        metadata?: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetRef?: string;
                            status?: string;
                            updatedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /**
         * Deactivate asset
         * @description Mark asset as retired (no new issuances)
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            status?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}/opt-ins/{holder}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get opt-in status for a holder and asset
         * @description Check if a holder has opted into an asset (XRPL = trustline)
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                    /** @description Holder account address */
                    holder: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            assetId?: string;
                            assetRef?: string;
                            holder?: string;
                            exists?: boolean;
                            details?: {
                                limit?: string;
                                balance?: string;
                                authorized?: boolean;
                            };
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                502: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        /**
         * Create or update opt-in for a holder and asset
         * @description Create trustline (XRPL) or equivalent opt-in mechanism
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                    holder: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        params?: {
                            limit?: string;
                        };
                        signing?: {
                            /** @enum {string} */
                            mode?: "wallet" | "server";
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            assetId?: string;
                            assetRef?: string;
                            holder?: string;
                            txId?: string;
                            status?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            reason?: string;
                        };
                    };
                };
                /** @description Default Response */
                502: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /**
         * Remove opt-in for a holder and asset
         * @description Remove trustline (XRPL) or equivalent opt-in mechanism
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                    holder: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            assetId?: string;
                            holder?: string;
                            txId?: string;
                            status?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                502: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}/issuances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List issuances for an asset
         * @description Get all issuances for a specific asset
         */
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                };
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            issuances?: {
                                issuanceId?: string;
                                assetId?: string;
                                to?: string;
                                amount?: string;
                                txId?: string;
                                status?: string;
                                createdAt?: string;
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Issue tokens to a holder
         * @description Issue tokens with optional compliance anchoring
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Recipient address */
                        to: string;
                        /** @description Amount to issue */
                        amount: string;
                        /** @description Compliance record reference */
                        complianceRef?: {
                            recordId?: string;
                            sha256?: string;
                        };
                        /**
                         * @description Anchor compliance data to blockchain
                         * @default true
                         */
                        anchor?: boolean;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            issuanceId?: string;
                            assetId?: string;
                            assetRef?: string;
                            to?: string;
                            amount?: string;
                            complianceRef?: {
                                recordId?: string;
                                sha256?: string;
                            };
                            txId?: string;
                            explorer?: string;
                            status?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                502: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}/issuances/{issuanceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get issuance status
         * @description Fetch issuance details and transaction status
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                    /** @description Issuance ID */
                    issuanceId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            issuanceId?: string;
                            assetId?: string;
                            assetRef?: string;
                            to?: string;
                            amount?: string;
                            complianceRef?: {
                                recordId?: string;
                                sha256?: string;
                            };
                            txId?: string;
                            explorer?: string;
                            status?: string;
                            createdAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
