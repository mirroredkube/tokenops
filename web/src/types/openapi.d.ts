/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/google": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/google/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/me/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/auth/2fa/setup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/disable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/2fa/verify-login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/system/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Liveness/health probe */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            service?: string;
                            time?: string;
                            uptimeSeconds?: number;
                            pid?: number;
                            memoryMB?: {
                                [key: string]: number;
                            };
                            version?: string;
                            env?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/system/xrpl-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** XRPL connectivity and node telemetry */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            endpoint?: string;
                            connected?: boolean;
                            info?: {
                                [key: string]: unknown;
                            };
                            fees?: {
                                [key: string]: unknown;
                            };
                            validatedLedger?: {
                                [key: string]: unknown;
                            };
                            error?: string;
                            time?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/evaluate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Evaluate compliance policy facts
         * @description Evaluate policy facts and generate requirement instances and enforcement plan
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        issuerCountry: string;
                        /** @enum {string} */
                        assetClass: "ART" | "EMT" | "OTHER";
                        targetMarkets: string[];
                        /** @enum {string} */
                        ledger: "XRPL" | "ETHEREUM" | "HEDERA";
                        /** @enum {string} */
                        distributionType: "offer" | "admission" | "private";
                        /** @enum {string} */
                        investorAudience: "retail" | "professional" | "institutional";
                        isCaspInvolved: boolean;
                        /** @enum {string} */
                        transferType: "CASP_TO_CASP" | "CASP_TO_SELF_HOSTED" | "SELF_HOSTED_TO_CASP" | "SELF_HOSTED_TO_SELF_HOSTED";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            requirementInstances?: {
                                id?: string;
                                requirementTemplateId?: string;
                                /** @enum {string} */
                                status?: "NA" | "REQUIRED" | "SATISFIED" | "EXCEPTION";
                                rationale?: string;
                            }[];
                            enforcementPlan?: {
                                xrpl?: {
                                    requireAuth?: boolean;
                                    trustlineAuthorization?: boolean;
                                    freezeControl?: boolean;
                                };
                                evm?: {
                                    allowlistGating?: boolean;
                                    pauseControl?: boolean;
                                    mintControl?: boolean;
                                    transferControl?: boolean;
                                };
                            };
                            rationale?: string[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/requirements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List requirement instances for an asset or requirement templates
         * @description Get requirement instances for a specific asset, or all requirement templates if no assetId provided
         */
        get: {
            parameters: {
                query?: {
                    /** @description Asset ID to get requirement instances for */
                    assetId?: string;
                    /** @description Filter by regulatory regime (when getting templates) */
                    regime?: string;
                    /** @description Filter by active status (when getting templates) */
                    active?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            requirements?: {
                                id?: string;
                                status?: string;
                                rationale?: string;
                                evidenceRefs?: Record<string, never>;
                                exceptionReason?: string;
                                notes?: string;
                                createdAt?: string;
                                updatedAt?: string;
                                requirementTemplate?: {
                                    id?: string;
                                    name?: string;
                                    description?: string;
                                    regime?: {
                                        id?: string;
                                        name?: string;
                                        jurisdiction?: string;
                                    };
                                };
                            }[];
                            templates?: {
                                id?: string;
                                name?: string;
                                description?: string;
                                applicabilityExpr?: string;
                                effectiveFrom?: string;
                                effectiveTo?: string;
                                regime?: {
                                    id?: string;
                                    name?: string;
                                    jurisdiction?: string;
                                };
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/instances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List requirement instances
         * @description Get all requirement instances with optional filtering
         */
        get: {
            parameters: {
                query?: {
                    assetId?: string;
                    status?: "NA" | "REQUIRED" | "SATISFIED" | "EXCEPTION";
                    regime?: string;
                    limit?: number;
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            instances?: {
                                id?: string;
                                assetId?: string;
                                issuanceId?: string;
                                status?: string;
                                rationale?: string;
                                requirementTemplate?: {
                                    id?: string;
                                    name?: string;
                                    regime?: {
                                        id?: string;
                                        name?: string;
                                    };
                                };
                                asset?: {
                                    id?: string;
                                    assetRef?: string;
                                    code?: string;
                                    assetClass?: string;
                                };
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create requirement instances for an asset
         * @description Create requirement instances based on asset and product information
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        assetId: string;
                        productId: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                            instances?: {
                                id?: string;
                                requirementTemplateId?: string;
                                status?: string;
                                rationale?: string;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/instances/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get requirement instance details
         * @description Get detailed information about a specific requirement instance
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            status?: string;
                            rationale?: string;
                            evidenceRefs?: Record<string, never>;
                            verifierId?: string;
                            verifiedAt?: string;
                            exceptionReason?: string;
                            requirementTemplate?: {
                                id?: string;
                                name?: string;
                                description?: string;
                                regime?: {
                                    id?: string;
                                    name?: string;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get assets for compliance filter dropdown
         * @description Get a simplified list of assets for use in compliance filtering
         */
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            assets?: {
                                id?: string;
                                code?: string;
                                assetRef?: string;
                                ledger?: string;
                                status?: string;
                                product?: {
                                    id?: string;
                                    name?: string;
                                    assetClass?: string;
                                };
                                organization?: {
                                    id?: string;
                                    name?: string;
                                };
                            }[];
                            total?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/records": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create compliance record with hash for anchoring
         * @description Create a compliance record with SHA256 hash for blockchain anchoring
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        assetId: string;
                        holder: string;
                        purpose?: string;
                        isin?: string;
                        legalIssuer?: string;
                        jurisdiction?: string;
                        micaClass?: string;
                        kycRequirement?: string;
                        transferRestrictions?: boolean;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            recordId?: string;
                            sha256?: string;
                            createdAt?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/requirements/{requirementId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update requirement status
         * @description Update the status of a compliance requirement (SATISFIED, EXCEPTION)
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Requirement instance ID */
                    requirementId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description New status for the requirement
                         * @enum {string}
                         */
                        status: "REQUIRED" | "SATISFIED" | "EXCEPTION";
                        /** @description Reason for exception (if status is EXCEPTION) */
                        exceptionReason?: string;
                        /** @description Rationale for the status change */
                        rationale?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            status?: string;
                            exceptionReason?: string;
                            rationale?: string;
                            verifierId?: string;
                            verifiedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/v1/compliance/evidence": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload evidence for a compliance requirement
         * @description Upload a file as evidence for a specific requirement instance
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description ID of the requirement instance */
                        requirementInstanceId: string;
                        /** @description Original filename */
                        fileName: string;
                        /** @description MIME type of the file */
                        fileType: string;
                        /** @description File size in bytes */
                        fileSize: number;
                        /** @description SHA256 hash of the file */
                        fileHash: string;
                        /** @description Path where file is stored */
                        uploadPath: string;
                        /** @description Optional description of the evidence */
                        description?: string;
                        /** @description Optional tags for categorization */
                        tags?: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            requirementInstanceId?: string;
                            fileName?: string;
                            fileType?: string;
                            fileSize?: number;
                            fileHash?: string;
                            uploadPath?: string;
                            description?: string;
                            tags?: string[];
                            uploadedBy?: string;
                            uploadedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/evidence/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload evidence file for a compliance requirement
         * @description Upload a file as evidence using multipart form data
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            requirementInstanceId?: string;
                            fileName?: string;
                            fileType?: string;
                            fileSize?: number;
                            fileHash?: string;
                            uploadPath?: string;
                            description?: string;
                            tags?: string[];
                            uploadedBy?: string;
                            uploadedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/evidence/{requirementInstanceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get evidence for a compliance requirement
         * @description Retrieve all evidence files for a specific requirement instance
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ID of the requirement instance */
                    requirementInstanceId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            evidence?: {
                                id?: string;
                                fileName?: string;
                                fileType?: string;
                                fileSize?: number;
                                fileHash?: string;
                                description?: string;
                                tags?: string[];
                                uploadedBy?: string;
                                uploadedAt?: string;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/requirements/{requirementId}/platform-acknowledge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Platform co-acknowledge ART/EMT compliance requirement
         * @description Platform admin acknowledges compliance requirement for ART/EMT tokens
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Requirement instance ID */
                    requirementId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Reason for platform acknowledgement */
                        acknowledgmentReason: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            platformAcknowledged?: boolean;
                            platformAcknowledgedBy?: string;
                            platformAcknowledgedAt?: string;
                            platformAcknowledgmentReason?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/requirements/{requirementId}/platform-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get platform acknowledgement status for a requirement
         * @description Retrieve platform acknowledgement status and details for a specific requirement
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Requirement instance ID */
                    requirementId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            platformAcknowledged?: boolean;
                            platformAcknowledgedBy?: string;
                            platformAcknowledgedAt?: string;
                            platformAcknowledgmentReason?: string;
                            platformAcknowledger?: {
                                id?: string;
                                name?: string;
                                email?: string;
                            };
                            assetClass?: string;
                            requiresPlatformAcknowledgement?: boolean;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compliance/evidence/bundle/{requirementInstanceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Export evidence bundle for a compliance requirement
         * @description Download evidence bundle in multiple formats: ZIP (with files), JSON (data only), or PDF (human-readable report)
         */
        get: {
            parameters: {
                query?: {
                    /** @description Export format: zip (with evidence files), json (data only), csv (spreadsheet analysis) */
                    format?: "zip" | "json" | "csv";
                };
                header?: never;
                path: {
                    /** @description ID of the requirement instance */
                    requirementInstanceId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description File containing evidence bundle (format depends on format parameter) */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}/debug": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List assets
         * @description List assets with optional filtering
         */
        get: {
            parameters: {
                query?: {
                    /** @description Filter by product ID */
                    productId?: string;
                    ledger?: "xrpl" | "hedera" | "ethereum";
                    status?: "draft" | "active" | "paused" | "retired";
                    limit?: number;
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            assets?: {
                                id?: string;
                                assetRef?: string;
                                ledger?: string;
                                network?: string;
                                issuer?: string;
                                code?: string;
                                assetClass?: string;
                                decimals?: number;
                                complianceMode?: string;
                                controls?: Record<string, never>;
                                registry?: Record<string, never>;
                                metadata?: Record<string, never>;
                                status?: string;
                                createdAt?: string;
                                product?: {
                                    id?: string;
                                    name?: string;
                                    assetClass?: string;
                                };
                                organization?: {
                                    id?: string;
                                    name?: string;
                                };
                                compliance?: {
                                    requirementCount?: number;
                                    requirements?: {
                                        id?: string;
                                        status?: string;
                                        template?: {
                                            id?: string;
                                            name?: string;
                                            regime?: string;
                                        };
                                    }[];
                                };
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create new asset
         * @description Register a new asset with ledger binding and policy configuration
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Product ID that this asset belongs to */
                        productId: string;
                        /**
                         * @description Target ledger for the asset
                         * @enum {string}
                         */
                        ledger: "xrpl" | "hedera" | "ethereum";
                        /**
                         * @description Network environment
                         * @default testnet
                         * @enum {string}
                         */
                        network?: "mainnet" | "testnet" | "devnet";
                        /** @description Issuer address/identifier on the ledger */
                        issuer: string;
                        /** @description Currency code/symbol */
                        code: string;
                        /**
                         * @description Asset class for compliance evaluation (OTHER, ART, EMT)
                         * @default OTHER
                         * @enum {string}
                         */
                        assetClass?: "OTHER" | "ART" | "EMT";
                        /** @description Number of decimal places */
                        decimals: number;
                        /**
                         * @description Compliance enforcement mode
                         * @default RECORD_ONLY
                         * @enum {string}
                         */
                        complianceMode?: "OFF" | "RECORD_ONLY" | "GATED_BEFORE";
                        controls?: {
                            requireAuth?: boolean;
                            freeze?: boolean;
                            clawback?: boolean;
                            transferFeeBps?: number;
                        };
                        registry?: {
                            isin?: string;
                            lei?: string;
                            micaClass?: string;
                            jurisdiction?: string;
                        };
                        metadata?: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetRef?: string;
                            ledger?: string;
                            network?: string;
                            issuer?: string;
                            code?: string;
                            decimals?: number;
                            complianceMode?: string;
                            status?: string;
                            createdAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /**
         * Update asset
         * @description Update asset configuration (draft assets only)
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @enum {string} */
                        status?: "draft" | "active" | "paused" | "retired";
                        /** @enum {string} */
                        complianceMode?: "OFF" | "RECORD_ONLY" | "GATED_BEFORE";
                        controls?: Record<string, never>;
                        registry?: Record<string, never>;
                        metadata?: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetRef?: string;
                            status?: string;
                            updatedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /**
         * Delete asset
         * @description Delete asset (draft assets only)
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/authorizations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all authorizations
         * @description Get a paginated list of all authorization records
         */
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                    status?: "PENDING" | "SUBMITTED" | "VALIDATED" | "FAILED" | "EXPIRED";
                    assetId?: string;
                    holder?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            authorizations?: {
                                id?: string;
                                assetId?: string;
                                holder?: string;
                                limit?: string;
                                txId?: string;
                                explorer?: string;
                                status?: string;
                                validatedAt?: string;
                                noRipple?: boolean;
                                requireAuth?: boolean;
                                external?: boolean;
                                externalSource?: string;
                                createdAt?: string;
                                updatedAt?: string;
                                asset?: {
                                    id?: string;
                                    code?: string;
                                    assetRef?: string;
                                    ledger?: string;
                                    network?: string;
                                };
                            }[];
                            pagination?: {
                                total?: number;
                                limit?: number;
                                offset?: number;
                                hasMore?: boolean;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}/authorizations/{holder}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get authorization status for a holder and asset
         * @description Check if a holder has been authorized for an asset (XRPL = trustline)
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                    /** @description Holder account address */
                    holder: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            assetId?: string;
                            assetRef?: string;
                            holder?: string;
                            exists?: boolean;
                            details?: {
                                limit?: string;
                                balance?: string;
                                authorized?: boolean;
                            };
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                502: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        /**
         * Create authorization request for holder
         * @description Create a secure authorization request that generates a URL for the holder to set up their trustline using their own wallet. Never handles private keys.
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                    holder: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        params?: {
                            limit?: string;
                            holderAddress: string;
                            currencyCode: string;
                            issuerAddress: string;
                            /** @default false */
                            noRipple?: boolean;
                            /** @default false */
                            requireAuth?: boolean;
                            /** Format: date-time */
                            expiresAt?: string;
                            /** Format: uri */
                            callbackUrl?: string;
                        };
                        signing?: {
                            /**
                             * @default wallet
                             * @enum {string}
                             */
                            mode?: "wallet";
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetId?: string;
                            assetRef?: string;
                            holder?: string;
                            currency?: string;
                            issuerAddress?: string;
                            limit?: string;
                            status?: string;
                            authUrl?: string;
                            expiresAt?: string;
                            oneTimeToken?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            reason?: string;
                        };
                    };
                };
                /** @description Default Response */
                502: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /**
         * Remove authorization for a holder and asset
         * @description Remove trustline (XRPL) or equivalent authorization mechanism
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                    holder: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            assetId?: string;
                            holder?: string;
                            txId?: string;
                            status?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                502: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/authorizations/token/{token}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get authorization request by token
         * @description Retrieve authorization request details using the one-time token
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description One-time authorization token */
                    token: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetId?: string;
                            holder?: string;
                            currency?: string;
                            issuerAddress?: string;
                            limit?: string;
                            status?: string;
                            expiresAt?: string;
                            noRipple?: boolean;
                            requireAuth?: boolean;
                            metadata?: Record<string, never>;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                410: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/authorizations/{id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get trustline status
         * @description Check the current status of a trustline on the ledger
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Authorization ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            exists?: boolean;
                            authorized?: boolean;
                            limit?: string;
                            balance?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/authorizations/{id}/authorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Authorize trustline as issuer
         * @description Issuer authorizes a trustline using tfSetfAuth flag (4-eyes approval required)
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Authorization ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description Issuer secret for signing authorization */
                        issuerSecret?: string;
                        /** @description User ID who approved the authorization */
                        approvedBy?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            status?: string;
                            txId?: string;
                            authorizedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/authorizations/external": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create external trustline entry
         * @description Add a trustline that was created outside our platform to our database
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        assetId: string;
                        holder: string;
                        currency: string;
                        issuerAddress: string;
                        limit?: string;
                        externalSource?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetId?: string;
                            holder?: string;
                            status?: string;
                            external?: boolean;
                            externalSource?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all issuances across assets
         * @description Get all token issuances for dashboard and reporting
         */
        get: {
            parameters: {
                query?: {
                    limit?: string;
                    offset?: string;
                    status?: "pending" | "submitted" | "validated" | "failed";
                    assetId?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            items?: {
                                id?: string;
                                assetId?: string;
                                assetRef?: string;
                                to?: string;
                                holder?: string;
                                amount?: string;
                                txId?: string;
                                status?: string;
                                complianceRef?: Record<string, never>;
                                complianceStatus?: string;
                                manifestHash?: string;
                                createdAt?: string;
                                updatedAt?: string;
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuances/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get individual issuance details
         * @description Get detailed information about a specific token issuance
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Issuance ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            assetId?: string;
                            assetRef?: string;
                            holder?: string;
                            amount?: string;
                            txId?: string;
                            status?: string;
                            complianceRef?: Record<string, never>;
                            complianceStatus?: string;
                            manifestHash?: string;
                            createdAt?: string;
                            updatedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}/issuances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List issuances for an asset
         * @description Get all issuances for a specific asset
         */
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                };
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            issuances?: {
                                issuanceId?: string;
                                assetId?: string;
                                to?: string;
                                amount?: string;
                                txId?: string;
                                status?: string;
                                createdAt?: string;
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Issue tokens to a holder
         * @description Issue tokens with optional compliance anchoring
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Recipient address */
                        holder: string;
                        /** @description Amount to issue */
                        amount: string;
                        /** @description Compliance facts for issuance */
                        issuanceFacts?: {
                            purpose?: string;
                            isin?: string;
                            legal_issuer?: string;
                            jurisdiction?: string;
                            mica_class?: string;
                            kyc_requirement?: string;
                            transfer_restrictions?: string;
                            max_transfer_amount?: string;
                            expiration_date?: string;
                            tranche_series?: string;
                            references?: string[];
                        };
                        /**
                         * @description Anchor compliance data to blockchain
                         * @default false
                         */
                        anchor?: boolean;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            issuanceId?: string;
                            assetId?: string;
                            assetRef?: string;
                            holder?: string;
                            amount?: string;
                            manifest?: {
                                manifestHash?: string;
                                manifestVersion?: string;
                            };
                            txId?: string;
                            explorer?: string;
                            status?: string;
                            compliance?: {
                                evaluated?: boolean;
                                status?: string;
                                requirementCount?: number;
                                requirements?: {
                                    id?: string;
                                    status?: string;
                                    template?: {
                                        id?: string;
                                        name?: string;
                                        regime?: string;
                                    };
                                }[];
                                enforcementPlan?: Record<string, never>;
                            };
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                502: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}/preflight": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Validate readiness for issuance (MVP) */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    assetId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            blockers?: {
                                code?: string;
                                message?: string;
                                hint?: string;
                            }[];
                            facts?: Record<string, never>;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/assets/{assetId}/issuances/{issuanceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get issuance status
         * @description Fetch issuance details and transaction status with optional refresh
         */
        get: {
            parameters: {
                query?: {
                    /** @description Refresh status from ledger */
                    refresh?: boolean;
                };
                header?: never;
                path: {
                    /** @description Asset ID */
                    assetId: string;
                    /** @description Issuance ID */
                    issuanceId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            issuanceId?: string;
                            assetId?: string;
                            assetRef?: string;
                            to?: string;
                            amount?: string;
                            complianceRef?: {
                                recordId?: string;
                                sha256?: string;
                            };
                            txId?: string;
                            explorer?: string;
                            status?: string;
                            validatedAt?: string;
                            validatedLedgerIndex?: number;
                            failureCode?: string;
                            createdAt?: string;
                            updatedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuances/by-compliance/{recordId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List issuances that reference a compliance record
         * @description Get all issuances that reference a specific compliance record
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Compliance record ID */
                    recordId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            issuances?: {
                                id?: string;
                                assetId?: string;
                                assetRef?: string;
                                to?: string;
                                amount?: string;
                                txId?: string;
                                explorer?: string;
                                status?: string;
                                createdAt?: string;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/me/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/v1/users/me/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/v1/organizations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List organizations
         * @description List organizations with optional filtering and pagination
         */
        get: {
            parameters: {
                query?: {
                    /** @description Filter by organization status */
                    status?: "ACTIVE" | "SUSPENDED" | "INACTIVE";
                    /** @description Filter by country (ISO 3166-1 alpha-2) */
                    country?: string;
                    /** @description Number of organizations to return */
                    limit?: number;
                    /** @description Number of organizations to skip */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            organizations?: {
                                id?: string;
                                name?: string;
                                legalName?: string;
                                country?: string;
                                jurisdiction?: string;
                                status?: string;
                                createdAt?: string;
                                updatedAt?: string;
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create organization
         * @description Create a new organization
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Organization name */
                        name: string;
                        /** @description Legal name of the organization */
                        legalName?: string;
                        /** @description Country code (ISO 3166-1 alpha-2) */
                        country: string;
                        /** @description Legal jurisdiction */
                        jurisdiction?: string;
                        /** @description Tax identification number */
                        taxId?: string;
                        /**
                         * Format: uri
                         * @description Organization website
                         */
                        website?: string;
                        /** @description Additional metadata */
                        metadata?: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            name?: string;
                            legalName?: string;
                            country?: string;
                            jurisdiction?: string;
                            status?: string;
                            createdAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/organizations/{organizationId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get organization details
         * @description Retrieve organization information and statistics
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Organization ID */
                    organizationId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            name?: string;
                            legalName?: string;
                            country?: string;
                            jurisdiction?: string;
                            taxId?: string;
                            website?: string;
                            status?: string;
                            metadata?: Record<string, never>;
                            createdAt?: string;
                            updatedAt?: string;
                            stats?: {
                                users?: number;
                                products?: number;
                                assets?: number;
                                issuerAddresses?: number;
                            };
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        /**
         * Update organization
         * @description Update organization information
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Organization ID */
                    organizationId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        legalName?: string;
                        country?: string;
                        jurisdiction?: string;
                        taxId?: string;
                        /** Format: uri */
                        website?: string;
                        /** @enum {string} */
                        status?: "ACTIVE" | "SUSPENDED" | "INACTIVE";
                        metadata?: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            name?: string;
                            legalName?: string;
                            country?: string;
                            jurisdiction?: string;
                            status?: string;
                            updatedAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/organizations/{organizationId}/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List organization users
         * @description List users belonging to an organization
         */
        get: {
            parameters: {
                query?: {
                    /** @description Filter by user role */
                    role?: "ADMIN" | "COMPLIANCE_OFFICER" | "AUDITOR" | "ISSUER_ADMIN" | "COMPLIANCE_REVIEWER" | "OPERATOR" | "VIEWER";
                    /** @description Filter by user status */
                    status?: "ACTIVE" | "SUSPENDED" | "INACTIVE";
                    limit?: number;
                    offset?: number;
                };
                header?: never;
                path: {
                    /** @description Organization ID */
                    organizationId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            users?: {
                                id?: string;
                                email?: string;
                                name?: string;
                                role?: string;
                                status?: string;
                                twoFactorEnabled?: boolean;
                                createdAt?: string;
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products/{id}/assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuer-addresses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List issuer addresses
         * @description List issuer addresses with optional filtering and pagination
         */
        get: {
            parameters: {
                query?: {
                    /** @description Filter by organization ID */
                    organizationId?: string;
                    /** @description Filter by address status */
                    status?: "PENDING" | "APPROVED" | "SUSPENDED" | "REVOKED";
                    /** @description Filter by ledger */
                    ledger?: "XRPL" | "ETHEREUM" | "HEDERA";
                    /** @description Filter by network */
                    network?: "MAINNET" | "TESTNET" | "DEVNET";
                    /** @description Number of addresses to return */
                    limit?: number;
                    /** @description Number of addresses to skip */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            addresses?: {
                                id?: string;
                                organizationId?: string;
                                address?: string;
                                ledger?: string;
                                network?: string;
                                allowedUseTags?: string[];
                                status?: string;
                                approvedAt?: string;
                                approvedBy?: string;
                                suspendedAt?: string;
                                suspendedBy?: string;
                                reason?: string;
                                createdAt?: string;
                                updatedAt?: string;
                            }[];
                            total?: number;
                            limit?: number;
                            offset?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create issuer address
         * @description Register a new issuer address for approval
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Organization ID that owns this address */
                        organizationId: string;
                        /** @description Blockchain address */
                        address: string;
                        /**
                         * @description Target ledger
                         * @enum {string}
                         */
                        ledger: "XRPL" | "ETHEREUM" | "HEDERA";
                        /**
                         * @description Network environment
                         * @enum {string}
                         */
                        network: "MAINNET" | "TESTNET" | "DEVNET";
                        /**
                         * @description Allowed use tags for this address
                         * @default [
                         *       "OTHER"
                         *     ]
                         */
                        allowedUseTags?: ("ART" | "EMT" | "OTHER")[];
                        /** @description Proof of control challenge response */
                        proofOfControl?: {
                            challenge?: string;
                            signature?: string;
                            publicKey?: string;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            organizationId?: string;
                            address?: string;
                            ledger?: string;
                            network?: string;
                            allowedUseTags?: string[];
                            status?: string;
                            createdAt?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuer-addresses/{addressId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get issuer address details
         * @description Retrieve issuer address information and audit trail
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Issuer address ID */
                    addressId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            organizationId?: string;
                            address?: string;
                            ledger?: string;
                            network?: string;
                            allowedUseTags?: string[];
                            status?: string;
                            proofOfControl?: Record<string, never>;
                            approvedAt?: string;
                            approvedBy?: string;
                            suspendedAt?: string;
                            suspendedBy?: string;
                            reason?: string;
                            metadata?: Record<string, never>;
                            createdAt?: string;
                            updatedAt?: string;
                            organization?: {
                                id?: string;
                                name?: string;
                                legalName?: string;
                            };
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuer-addresses/{addressId}/approve": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Approve issuer address
         * @description Approve an issuer address with 4-eyes verification
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Issuer address ID */
                    addressId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Reason for approval */
                        reason: string;
                        /** @description Updated allowed use tags */
                        allowedUseTags?: ("ART" | "EMT" | "OTHER")[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            status?: string;
                            approvedAt?: string;
                            approvedBy?: string;
                            reason?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuer-addresses/{addressId}/suspend": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Suspend issuer address
         * @description Suspend an issuer address
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Issuer address ID */
                    addressId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Reason for suspension */
                        reason: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            status?: string;
                            suspendedAt?: string;
                            suspendedBy?: string;
                            reason?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuer-addresses/approved": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get approved issuer addresses
         * @description Get list of approved issuer addresses for asset creation
         */
        get: {
            parameters: {
                query?: {
                    /** @description Filter by organization ID */
                    organizationId?: string;
                    /** @description Filter by ledger */
                    ledger?: "XRPL" | "ETHEREUM" | "HEDERA";
                    /** @description Filter by network */
                    network?: "MAINNET" | "TESTNET" | "DEVNET";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            addresses?: {
                                id?: string;
                                address?: string;
                                ledger?: string;
                                network?: string;
                                allowedUseTags?: string[];
                                approvedAt?: string;
                                approvedBy?: string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/issuer-addresses/{addressId}/proof-of-control": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Submit proof of control
         * @description Submit proof of control challenge response
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Issuer address ID */
                    addressId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Challenge string */
                        challenge: string;
                        /** @description Signature of the challenge */
                        signature: string;
                        /** @description Public key (optional) */
                        publicKey?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            verified?: boolean;
                            message?: string;
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/balances/{account}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get issued token balances for an account (tenant-scoped) */
        get: {
            parameters: {
                query?: {
                    /** @description Optional issuer r-address filter (must belong to tenant) */
                    issuer?: string;
                    /** @description Optional currency filter (3-char like USD/EUR or 160-bit hex) */
                    currency?: string;
                };
                header?: never;
                path: {
                    /** @description Account r-address */
                    account: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            account?: string;
                            xrpBalance?: string;
                            trustLines?: {
                                currency?: string;
                                currencyHex?: string;
                                issuer?: string;
                                balance?: string;
                                limit?: string;
                                frozen?: boolean;
                                noRipple?: boolean;
                                qualityIn?: number;
                                qualityOut?: number;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            error?: string;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
