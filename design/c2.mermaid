C4Container
title Token Issuance Platform — Containers

Person(issuer, "Issuer")
Boundary(platform, "Platform") {
  Container(api, "API Gateway", "Node/Express", "Auth, routing, rate limiting, OpenAPI.")
  Container(ui, "Issuer Console", "React/Next.js", "Wizard for Opt-In → Compliance → Issue.")
  Container(assetsvc, "Asset Service", "Node", "CRUD for Asset, policy (complianceMode), metadata.")
  Container(optinsvc, "Opt-In Service", "Node", "Ledger-agnostic opt-ins (trustline/associate/ATA).")
  Container(compsvc, "Compliance Service", "Node", "Stores off-ledger compliance JSON + SHA-256. Review/verify.")
  Container(issuesvc, "Issuance Service", "Node Workers", "Pre-flight, memo anchoring, tx submit, polling.")
  Container(adapters, "Ledger Adapter Layer", "Node libs", "XRPL/Hedera/Ethereum implementations.")
  ContainerDb(db, "Core DB", "PostgreSQL", "assets, opt_ins, issuances, compliance_records, tx_log, audit.")
  ContainerBlob(vault, "PII Vault", "S3/Blob + SSE", "Encrypted documents; only hashes in DB.")
  Container(kms, "KMS/HSM", "Cloud KMS", "Key custody for server-side flows, envelope encryption.")
  Container(queue, "Job Queue", "Redis/SQS", "Async tx submission, retries, status polling.")
  Container(monitor, "Observability", "Prom/OTel", "Metrics, traces, alerts.")
}
System_Ext(wallets, "Wallets", "Xaman/GemWallet/etc.")
System_Ext(xrpl, "XRPL", "Ledger")
System_Ext(hedera, "Hedera", "Ledger")
System_Ext(ethereum, "Ethereum", "Ledger")

Rel(issuer, ui, "Uses")
Rel(ui, api, "REST/JSON")
Rel(api, assetsvc, "→")
Rel(api, optinsvc, "→")
Rel(api, compsvc, "→")
Rel(api, issuesvc, "→ via queue for async")
Rel(optinsvc, adapters, "Use")
Rel(issuesvc, adapters, "Use (submit & poll)")
Rel(adapters, xrpl, "WS/HTTP")
Rel(adapters, hedera, "HTTP")
Rel(adapters, ethereum, "RPC")
Rel(assetsvc, db, "CRUD")
Rel(compsvc, db, "JSON + hash")
Rel(issuesvc, db, "Persist tx, results")
Rel(optinsvc, db, "Persist status")
Rel(compsvc, vault, "Store PII docs (encrypted)")
Rel(api, wallets, "Unsigned tx → sign")
Rel(issuesvc, queue, "enqueue/dequeue")
Rel(api, monitor, "logs/metrics")
Rel(issuesvc, kms, "sign/encrypt (if needed)")
